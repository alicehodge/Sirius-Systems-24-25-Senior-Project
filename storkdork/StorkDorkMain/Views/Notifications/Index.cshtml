@model List<Notification>

<div class="container mt-4">
    @Html.AntiForgeryToken()

    <h2>My Notifications</h2>

    <div class="row mb-3">
        <div class="col">
            <div class="btn-group filter-buttons">
                <button class="btn btn-outline-primary active" data-filter="all">All</button>
                <button class="btn btn-outline-primary" data-filter="unread">Unread</button>
                <button class="btn btn-outline-primary" data-filter="read">Read</button>
            </div>
        </div>
    </div>

    <div class="notification-list">
        @if (!Model.Any())
        {
            <div class="alert alert-info">No notifications to display</div>
        }
        else
        {
            @foreach (var notification in Model)
            {
                <div class="card mb-2 notification-item @(!notification.IsRead ? "border-primary" : "")" 
                     data-notification-id="@notification.Id"
                     data-is-read="@notification.IsRead.ToString().ToLower()">
                    <div class="card-body d-flex justify-content-between align-items-start">
                        <div class="d-flex align-items-center">
                            <i class="bi @(notification.Type == "Success" ? "bi-check-circle text-success" : 
                                          notification.Type == "Warning" ? "bi-exclamation-circle text-warning" : 
                                          "bi-info-circle text-info") me-2 fs-4"></i>
                            <div>
                                <p class="mb-1 @(!notification.IsRead ? "fw-bold" : "")">@notification.Message</p>
                                <small class="text-muted">@notification.CreatedAt.ToLocalTime().ToString("MMM dd, yyyy HH:mm")</small>
                            </div>
                        </div>
                        <div class="actions">
                            @if (!string.IsNullOrEmpty(notification.RelatedUrl))
                            {
                                <a href="@notification.RelatedUrl" class="btn btn-sm btn-outline-primary me-2">View</a>
                            }
                            <button class="btn btn-sm @(notification.IsRead ? "btn-outline-secondary" : "btn-outline-primary") toggle-read"
                                    data-notification-id="@notification.Id">
                                @(notification.IsRead ? "Mark as Unread" : "Mark as Read")
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/notifications.js"></script>
}